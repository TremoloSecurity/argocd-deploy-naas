---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: jitdb
  namespace: openunison
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-openunison
    app.kubernetes.io/component: openunison-workflows
    app.kubernetes.io/part-of: openunison
  annotations:
    argocd.argoproj.io/sync-wave: "40"
spec:
  description: JIT
  inList: false
  label: JIT
  orgId: 687da09f-8ec1-48ac-b035-f2f182b9bd1e
  dynamicConfiguration:
    dynamic: false
    className: ""
    params: []
  tasks: |-
           

           - taskType: ifAttrExists
             name: githubTeams
             onSuccess:
             - taskType: customTask
               className: com.tremolosecurity.unison.proxy.auth.github.MergeGithubGroups
               params: {}

           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.JavaScriptTask
             params:
               javaScript: |-
                 // Maps external groups to local groups
                 System = Java.type("java.lang.System");
                 DN = Java.type("com.novell.ldap.util.DN");
                 Attribute = Java.type("com.tremolosecurity.saml.Attribute");
                 ArrayList = Java.type("java.util.ArrayList");
                 SetupGroupMetadataWatch = Java.type("com.tremolosecurity.proxy.filters.SetupGroupMetadataWatch");
                 HashMap = Java.type("java.util.HashMap");

                 function init(task,params) {
                   // nothing to do
                 }
 
                 function reInit(task) {
                   // do nothing
                 }
 
                 function doTask(user,request) {
                   var hasInternal = false;
                   
                   user.getGroups().clear();
                   
                   if (user.getAttribs().get("githubTeams") != null) {
                    memberOf = user.getAttribs().get("githubTeams"); 
                   } else {
                    memberOf = user.getAttribs().get("memberOf");
                  }
                   
                   request.put("WORKFLOW",task.getWorkflow());
                   if (memberOf != null) {
                    for (var i=0;i<memberOf.getValues().size();i++) {
                      k8sGroup = SetupGroupMetadataWatch.getK8s(memberOf.getValues().get(i));
                      
                      
                      if (k8sGroup != null) {
                      
                        for (var j=0;j<k8sGroup.size();j++) {
                          var k8sGroupName = k8sGroup.get(j);
                          user.getGroups().add(k8sGroupName);
                        }
                      }
                    }
                  }
                   System.out.println(user.getGroups());
                   return true;
                 }  
           - taskType: mapping
             strict: true
             map:
             - targetAttributeName: TREMOLO_USER_ID
               sourceType: user
               targetAttributeSource: uid
             - targetAttributeName: sub
               sourceType: user
               targetAttributeSource: uid
             - targetAttributeName: email
               sourceType: custom
               targetAttributeSource: com.tremolosecurity.mapping.DefaultEmail
             - targetAttributeName: first_name
               sourceType: user
               targetAttributeSource: givenName
             - targetAttributeName: last_name
               sourceType: user
               targetAttributeSource: sn
             - targetAttributeName: uid
               sourceType: user
               targetAttributeSource: uid
             onSuccess:
               - taskType: provision
                 sync: true
                 target: jitdb
                 setPassword: false
                 onlyPassedInAttributes: true
                 attributes:
                 - sub
                 - email
                 - first_name
                 - last_name
                 - uid
               - taskType: resync
                 keepExternalAttrs: false
                 changeRoot: true
                 newRoot: o=Tremolo
                 